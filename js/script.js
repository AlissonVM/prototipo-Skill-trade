// Este archivo JavaScript contendr√° toda la l√≥gica interactiva de tu p√°gina web.

// La funci√≥n 'DOMContentLoaded' se asegura de que el c√≥digo se ejecute
// solo cuando todo el HTML de la p√°gina ha sido cargado y parseado.
document.addEventListener('DOMContentLoaded', function() {
    console.log('SkillTrade: ¬°La p√°gina ha cargado completamente! üéâ');

    // --- Funcionalidad para botones de Registro e Inicio de Sesi√≥n (simulada) ---
    // Seleccionamos los botones por sus clases.
    const registerBtn = document.querySelector('.main-nav .btn-primary');
    const loginBtn = document.querySelector('.main-nav .btn-secondary');

    // A√±adimos un "escuchador de eventos" para cuando se haga clic en el bot√≥n de registrarse.
    // Solo si el bot√≥n existe (para evitar errores en p√°ginas donde no est√©n).
    if (registerBtn) {
        registerBtn.addEventListener('click', function(event) {
            // event.preventDefault(); // Comentar esto si quieres que los enlaces funcionen directamente a register.html
            // alert('¬°Gracias por tu inter√©s en registrarte! Ser√°s redirigido al formulario de registro.');
            // En una versi√≥n real, aqu√≠ podr√≠as:
            // - Redirigir a una p√°gina de registro real: window.location.href = 'register.html';
            // - Mostrar un formulario de registro en un modal (ventana emergente).
            console.log('Bot√≥n Registrarse clicado.');
        });
    }

    // Hacemos lo mismo para el bot√≥n de iniciar sesi√≥n.
    if (loginBtn) {
        loginBtn.addEventListener('click', function(event) {
            // event.preventDefault(); // Comentar esto si quieres que los enlaces funcionen directamente a login.html
            // alert('¬°Bienvenido de nuevo! Ser√°s redirigido a la p√°gina de inicio de sesi√≥n.');
            console.log('Bot√≥n Iniciar Sesi√≥n clicado.');
        });
    }

    // --- Funcionalidad de la Barra de B√∫squeda (en services.html) ---
    const searchInput = document.querySelector('.search-bar-container input[type="text"]');
    const categorySelect = document.querySelector('.search-bar-container select');
    const searchButton = document.querySelector('.search-bar-container button');

    if (searchButton) { // Aseg√∫rate de que solo se ejecute en la p√°gina donde existe el bot√≥n de b√∫squeda
        searchButton.addEventListener('click', function() {
            const searchTerm = searchInput ? searchInput.value : '';
            const selectedCategory = categorySelect ? categorySelect.value : 'Todas';
            console.log(`Buscando "${searchTerm}" en la categor√≠a: "${selectedCategory}"`);
            alert(`Simulando b√∫squeda de: "${searchTerm}" en la categor√≠a: "${selectedCategory}". ¬°Pronto ver√°s resultados reales!`);
            // En una aplicaci√≥n real, aqu√≠ se enviar√≠a la consulta a un servidor
            // o se filtrar√≠an din√°micamente los servicios mostrados en la misma p√°gina.
        });
    }

    // --- Funcionalidad para el formulario de contacto (en contact.html) ---
    const contactForm = document.querySelector('#contact-form-section form');
    if (contactForm) {
        contactForm.addEventListener('submit', function(event) {
            event.preventDefault(); // Evita que el formulario se env√≠e realmente
            // Aqu√≠ puedes capturar los datos del formulario
            const name = document.getElementById('name').value;
            const email = document.getElementById('email').value;
            const subject = document.getElementById('subject').value;
            const message = document.getElementById('message').value;

            console.log('Mensaje de Contacto Enviado:');
            console.log(`Nombre: ${name}`);
            console.log(`Email: ${email}`);
            console.log(`Asunto: ${subject}`);
            console.log(`Mensaje: ${message}`);

            alert('¬°Gracias por tu mensaje! Nos pondremos en contacto contigo pronto.');
            contactForm.reset(); // Limpia el formulario despu√©s de "enviar"
            // En una aplicaci√≥n real, aqu√≠ se enviar√≠an los datos a un backend (servidor)
        });
    }

    // --- Funcionalidad para los formularios de Login/Register (en login.html, register.html) ---
    const loginForm = document.querySelector('.form-container form');
    if (loginForm && document.title.includes('Iniciar Sesi√≥n')) { // Es el formulario de login
        loginForm.addEventListener('submit', function(event) {
            event.preventDefault(); // Evita que el formulario se env√≠e
            const email = document.getElementById('email').value;
            const password = document.getElementById('password').value;
            console.log('Intento de Inicio de Sesi√≥n:');
            console.log(`Email: ${email}`);
            console.log(`Contrase√±a: ${password}`);
            alert('Inicio de sesi√≥n simulado. ¬°Bienvenido de vuelta!');
            // Redirigir a la p√°gina de inicio o dashboard si fuera real
            // window.location.href = 'index.html';
        });
    }

    const registerForm = document.querySelector('.form-container form');
    if (registerForm && document.title.includes('Registrarse')) { // Es el formulario de registro
        registerForm.addEventListener('submit', function(event) {
            event.preventDefault(); // Evita que el formulario se env√≠e
            const name = document.getElementById('name').value;
            const email = document.getElementById('email').value;
            const password = document.getElementById('password').value;
            const skill = document.getElementById('skill').value;
            const category = document.getElementById('category').value;
            const bio = document.getElementById('bio').value;

            console.log('Intento de Registro de Usuario:');
            console.log(`Nombre: ${name}`);
            console.log(`Email: ${email}`);
            console.log(`Contrase√±a: ${password}`);
            console.log(`Habilidad: ${skill}`);
            console.log(`Categor√≠a: ${category}`);
            console.log(`Bio: ${bio}`);
            alert('Registro simulado. ¬°Gracias por unirte a SkillTrade!');
            // Redirigir a la p√°gina de inicio de sesi√≥n o un perfil de usuario si fuera real
            // window.location.href = 'login.html';
        });
    }


    // --- Futuras funcionalidades que podr√≠as a√±adir aqu√≠: ---
    // - L√≥gica para el sistema de negociaci√≥n (enviar/recibir ofertas en el chat).
    // - Dinamismo al cargar los servicios (por ejemplo, desde un array de datos o una API).
    // - Animaciones CSS con JavaScript (ej. on scroll).
    // - Implementaci√≥n del sistema de valoraci√≥n con estrellas (interactivo).
    // - Funcionalidad de un "dashboard" con las m√©tricas personales.
});
